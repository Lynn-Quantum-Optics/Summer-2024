function probs = Projection(rho)
%% definitions of basis states %%
H = [1;0];
V = [0; 1];
D = [1/sqrt(2); 1/sqrt(2)];
A = [1/sqrt(2); -1/sqrt(2)];
R = [1/sqrt(2); 1j/sqrt(2)];
L = [1/sqrt(2); -1j/sqrt(2)];
%% projection operator%%
    function prob = compute_proj(b1, b2, rho)
        proj1 = cell2mat(b1) * ctranspose(cell2mat(b1));
        proj2 = cell2mat(b2) * ctranspose(cell2mat(b2));
        d
        prob = real(trace(kron(proj1, proj2) * rho));
    end
%% compute all projections %%
basis_ls = {H, V, D, A, R, L};
probs = [];
for l=1:numel(basis_ls)
    b1 = basis_ls(l);
    disp(b1)
    disp(l);
    for m=1:numel(basis_ls)
        disp(m);
        b2 = basis_ls(m);
        % compute proj
        prob = compute_proj(b1, b2, rho);
        probs = horzcat(probs, prob);
    end
end
%% resize into array %%
disp(probs)
disp(sum(probs(1:4)))
disp(sum(probs(5:8)))
% disp(sum(probs(9:12)))
% probs = reshape(probs, 4, 4);
end